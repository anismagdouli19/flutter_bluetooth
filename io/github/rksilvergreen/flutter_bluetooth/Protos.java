// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/flutter_bluetooth.proto

package io.github.rksilvergreen.flutter_bluetooth;

public final class Protos {
  private Protos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AdapterStateMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flutter_bluetooth.AdapterStateMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.flutter_bluetooth.AdapterStateMessage.AdapterState state = 1;</code>
     * @return The enum numeric value on the wire for state.
     */
    int getStateValue();
    /**
     * <code>.flutter_bluetooth.AdapterStateMessage.AdapterState state = 1;</code>
     * @return The state.
     */
    io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.AdapterState getState();
  }
  /**
   * Protobuf type {@code flutter_bluetooth.AdapterStateMessage}
   */
  public  static final class AdapterStateMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flutter_bluetooth.AdapterStateMessage)
      AdapterStateMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AdapterStateMessage.newBuilder() to construct.
    private AdapterStateMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AdapterStateMessage() {
      state_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AdapterStateMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AdapterStateMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              state_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.rksilvergreen.flutter_bluetooth.Protos.internal_static_flutter_bluetooth_AdapterStateMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.rksilvergreen.flutter_bluetooth.Protos.internal_static_flutter_bluetooth_AdapterStateMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.class, io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.Builder.class);
    }

    /**
     * Protobuf enum {@code flutter_bluetooth.AdapterStateMessage.AdapterState}
     */
    public enum AdapterState
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TURNING_ON = 0;</code>
       */
      TURNING_ON(0),
      /**
       * <code>TURNED_ON = 1;</code>
       */
      TURNED_ON(1),
      /**
       * <code>TURNING_OFF = 2;</code>
       */
      TURNING_OFF(2),
      /**
       * <code>TURNED_OFF = 3;</code>
       */
      TURNED_OFF(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>TURNING_ON = 0;</code>
       */
      public static final int TURNING_ON_VALUE = 0;
      /**
       * <code>TURNED_ON = 1;</code>
       */
      public static final int TURNED_ON_VALUE = 1;
      /**
       * <code>TURNING_OFF = 2;</code>
       */
      public static final int TURNING_OFF_VALUE = 2;
      /**
       * <code>TURNED_OFF = 3;</code>
       */
      public static final int TURNED_OFF_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AdapterState valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static AdapterState forNumber(int value) {
        switch (value) {
          case 0: return TURNING_ON;
          case 1: return TURNED_ON;
          case 2: return TURNING_OFF;
          case 3: return TURNED_OFF;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AdapterState>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AdapterState> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AdapterState>() {
              public AdapterState findValueByNumber(int number) {
                return AdapterState.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final AdapterState[] VALUES = values();

      public static AdapterState valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AdapterState(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flutter_bluetooth.AdapterStateMessage.AdapterState)
    }

    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    /**
     * <code>.flutter_bluetooth.AdapterStateMessage.AdapterState state = 1;</code>
     * @return The enum numeric value on the wire for state.
     */
    public int getStateValue() {
      return state_;
    }
    /**
     * <code>.flutter_bluetooth.AdapterStateMessage.AdapterState state = 1;</code>
     * @return The state.
     */
    public io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.AdapterState getState() {
      @SuppressWarnings("deprecation")
      io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.AdapterState result = io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.AdapterState.valueOf(state_);
      return result == null ? io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.AdapterState.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (state_ != io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.AdapterState.TURNING_ON.getNumber()) {
        output.writeEnum(1, state_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (state_ != io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.AdapterState.TURNING_ON.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage)) {
        return super.equals(obj);
      }
      io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage other = (io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage) obj;

      if (state_ != other.state_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + state_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code flutter_bluetooth.AdapterStateMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flutter_bluetooth.AdapterStateMessage)
        io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.github.rksilvergreen.flutter_bluetooth.Protos.internal_static_flutter_bluetooth_AdapterStateMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.github.rksilvergreen.flutter_bluetooth.Protos.internal_static_flutter_bluetooth_AdapterStateMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.class, io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.Builder.class);
      }

      // Construct using io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        state_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.github.rksilvergreen.flutter_bluetooth.Protos.internal_static_flutter_bluetooth_AdapterStateMessage_descriptor;
      }

      @java.lang.Override
      public io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage getDefaultInstanceForType() {
        return io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.getDefaultInstance();
      }

      @java.lang.Override
      public io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage build() {
        io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage buildPartial() {
        io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage result = new io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage(this);
        result.state_ = state_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage) {
          return mergeFrom((io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage other) {
        if (other == io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.getDefaultInstance()) return this;
        if (other.state_ != 0) {
          setStateValue(other.getStateValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int state_ = 0;
      /**
       * <code>.flutter_bluetooth.AdapterStateMessage.AdapterState state = 1;</code>
       * @return The enum numeric value on the wire for state.
       */
      public int getStateValue() {
        return state_;
      }
      /**
       * <code>.flutter_bluetooth.AdapterStateMessage.AdapterState state = 1;</code>
       * @param value The enum numeric value on the wire for state to set.
       * @return This builder for chaining.
       */
      public Builder setStateValue(int value) {
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flutter_bluetooth.AdapterStateMessage.AdapterState state = 1;</code>
       * @return The state.
       */
      public io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.AdapterState getState() {
        @SuppressWarnings("deprecation")
        io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.AdapterState result = io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.AdapterState.valueOf(state_);
        return result == null ? io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.AdapterState.UNRECOGNIZED : result;
      }
      /**
       * <code>.flutter_bluetooth.AdapterStateMessage.AdapterState state = 1;</code>
       * @param value The state to set.
       * @return This builder for chaining.
       */
      public Builder setState(io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage.AdapterState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flutter_bluetooth.AdapterStateMessage.AdapterState state = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearState() {
        
        state_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flutter_bluetooth.AdapterStateMessage)
    }

    // @@protoc_insertion_point(class_scope:flutter_bluetooth.AdapterStateMessage)
    private static final io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage();
    }

    public static io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AdapterStateMessage>
        PARSER = new com.google.protobuf.AbstractParser<AdapterStateMessage>() {
      @java.lang.Override
      public AdapterStateMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AdapterStateMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AdapterStateMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AdapterStateMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.github.rksilvergreen.flutter_bluetooth.Protos.AdapterStateMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flutter_bluetooth_AdapterStateMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flutter_bluetooth_AdapterStateMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035proto/flutter_bluetooth.proto\022\021flutter" +
      "_bluetooth\"\251\001\n\023AdapterStateMessage\022B\n\005st" +
      "ate\030\001 \001(\01623.flutter_bluetooth.AdapterSta" +
      "teMessage.AdapterState\"N\n\014AdapterState\022\016" +
      "\n\nTURNING_ON\020\000\022\r\n\tTURNED_ON\020\001\022\017\n\013TURNING" +
      "_OFF\020\002\022\016\n\nTURNED_OFF\020\003B3\n)io.github.rksi" +
      "lvergreen.flutter_bluetoothB\006Protosb\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_flutter_bluetooth_AdapterStateMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flutter_bluetooth_AdapterStateMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flutter_bluetooth_AdapterStateMessage_descriptor,
        new java.lang.String[] { "State", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
